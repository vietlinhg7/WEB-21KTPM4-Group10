<!DOCTYPE HTML>
<html>

<head>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 18px;
      /* Đặt cỡ chữ to hơn theo nhu cầu */
    }

    @media only screen and (max-width: 600px) {
      #chartContainer {
        width: 100%;
        height: 400px;
        /* Điều chỉnh chiều cao nếu cần thiết */
      }
    }

    @media only screen and (min-width: 601px) and (max-width: 800px) {
      #chartContainer {
        width: 100%;
        height: 500px;
        /* Điều chỉnh chiều cao nếu cần thiết */
      }
    }

    /* Add more media queries as needed for different screen sizes */

    /* Default styling for larger screens */
    #chartContainer {
      width: 100%;
      height: 300px;
    }
  </style>
  
  <script type="text/javascript">
  
    
    window.onload = function () {
      fetch('/infoReport')
        .then(response => response.json())
        .then(data => {
        console.log('Dữ liệu từ server:', data);

          // Xử lý dữ liệu và cập nhật biểu đồ
          const processedData = processData(data);
          updateChart(processedData);
        })
        .catch(error => {
          console.error('Lỗi khi tải dữ liệu:', error);
      });
    };

    function processData(data) {
      const reportTypeCounts = {};
      const tinhtrangCounts = {};
      const tinhtrangCounts1 = {};


      // Đếm số lượng xuất hiện cho từng reportType
      data.forEach(item => {
          // Đếm cho reportType
        reportTypeCounts[item.reportType] = (reportTypeCounts[item.reportType] || 0) + 1;

        // Đếm cho tinhtrang = "Đã xử lý xong"
        if (item.tinhtrang == "Đã xử lý xong") {
          console.log(item.tinhtrang);
          tinhtrangCounts[item.reportType] = (tinhtrangCounts[item.reportType] || 0) + 1;
        } else {
          // Nếu không có "Đã xử lý xong", đặt giá trị là 0
          tinhtrangCounts[item.reportType] = tinhtrangCounts[item.reportType] || 0;
        }

        // Đếm cho tinhtrang = "Đã xử lý xong"
        if (item.tinhtrang == "Chưa xử lí") {
          tinhtrangCounts1[item.reportType] = (tinhtrangCounts1[item.reportType] || 0) + 1;
        } else {
          // Nếu không có "Đã xử lý xong", đặt giá trị là 0
          tinhtrangCounts1[item.reportType] = tinhtrangCounts1[item.reportType] || 0;
        }
        
      });

      // Lấy tất cả các reportType từ dữ liệu
      const allReportTypes = ["Tố giác sai phạm", "Đăng ký nội dung", "Đóng góp ý kiến", "Giải đáp thắc mắc"];

      // Đảm bảo rằng mỗi reportType đều có giá trị (thậm chí là 0) trong các đối tượng đếm
      allReportTypes.forEach(reportType => {
        reportTypeCounts[reportType] = reportTypeCounts[reportType] || 0;
        tinhtrangCounts[reportType] = tinhtrangCounts[reportType] || 0;
        tinhtrangCounts1[reportType] = tinhtrangCounts1[reportType] || 0;
      });

      // Chuyển đổi số lượng đếm thành định dạng dataPoints
      const reportTypeDataPoints = allReportTypes.map(reportType => {
        return { y: reportTypeCounts[reportType], label: reportType };
      });

      const tinhtrangDataPoints = allReportTypes.map(reportType => {
        return { y: tinhtrangCounts[reportType], label: reportType };
      });

      const tinhtrangDataPoints1 = allReportTypes.map(reportType => {
        return { y: tinhtrangCounts1[reportType], label: reportType };
      });

      return { reportType: reportTypeDataPoints, tinhtrang: tinhtrangDataPoints, tinhtrang1: tinhtrangDataPoints1 };
    }

    function updateChart(data) {
      console.log('Dữ liệu cho tinhtrang:', data.reportType);
      console.log('Dữ liệu cho tinhtrang:', data.tinhtrang);
      console.log('Dữ liệu cho tinhtrang:', data.tinhtrang1);
      try {
          var chart = new CanvasJS.Chart("chartContainer", {
          title: {
            text: "Thống kê báo cáo"
          },
          axisY: {
            maximum: 100
          },
          data: [
            {
              type: "bar",
              showInLegend: true,
              legendText: "Số lượng",
              color: "gold",
              dataPoints: data.reportType
            },
            {
            type: "bar",
            showInLegend: true,
            legendText: "Đã xử lý xong",
            color: "#198754",
            dataPoints: data.tinhtrang
            },
            {
            type: "bar",
            showInLegend: true,
            legendText: "Đang xử lý",
            color: "#dc3545",
            dataPoints: data.tinhtrang1
            }
          ]
        });

        

        chart.render();
      }catch (error) {
        console.error('Lỗi khi vẽ biểu đồ:', error);
      }
      
    }



  </script>



  <script type="text/javascript" src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/[email protected]/dist/chart.umd.min.js"></script>

</head>

<body>
  <div id="chartContainer"></div>
  <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"
    integrity="sha384-oBqDVmMz9ATKxIep9tiCxS/Z9fNfEXiDAYTujMAeBAsjFuCZSmKbSSUnQlmh/jp3" crossorigin="anonymous">
    </script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.min.js"
    integrity="sha384-7VPbUDkoPSGFnVtYi0QogXtr74QeVeeIs99Qfg5YCF+TidwNdjvaKZX19NZ/e6oz" crossorigin="anonymous">
    </script>
</body>

</html>