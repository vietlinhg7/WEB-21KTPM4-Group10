<body>
  <content>
    <div id="map"></div>
    <!-- 
      The `defer` attribute causes the callback to execute after the full HTML
      document has been parsed. For non-blocking uses, avoiding race conditions,
      and consistent behavior across browsers, consider loading using Promises.
      See https://developers.google.com/maps/documentation/javascript/load-maps-js-api
      for more information.
      -->
    <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC5paKst7kP-INwPaSuqoak2nRGeJOSTQc&callback=initAutocomplete&libraries=places&v=weekly"
      defer
    ></script>
    <div id="sidebar">
      <div id="section1">
        <img src="images/location.png" width=25px height=25px>
        <div id="locationInfo">
          <div class="line1">Thông tin địa điểm</div>
          <div class="line2">Coffee Anh Trí</div>
          <div class="line3">85 Trần Đình Xu, Phường Nguyễn Cư Trinh, Quận 1, Thành phố Hồ Chí Minh, Việt Nam</div>
        </div>
      </div>
      <div id="section2a">
        <img src="images/ad.png" width=25px height=25px>
        <div id="adInfo">
          <div class="line1">Thông tin quảng cáo</div>
          <div class="line2">Bên thuê quảng cáo</div>
          <div class="line3">Nestlé Vietnam Ltd</div>
          <div class="line2">Nội dung quảng cáo</div>
          <div class="line3">MỚI! NESCAFÉ CAFÉ VIỆT PHIÊN BẢN ĐẶC BIỆT VỚI ARABICA</div>
          <div class="line2">Hình thức quảng cáo</div>
          <div class="line3">Quảng cáo thương mại</div>
          <div class="line2">Loại vị trí</div>
          <div class="line3">Đất tư nhân</div>
          <div class="line2">Thời hạn quảng cáo</div>
          <div class="line3">01/10/2023 - 01/01/2024</div>
        </div>
      </div>
      <div id="section2b">
        <img src="images/ad.png" width=25px height=25px>
        <div id="reportInfo">
          <div class="line1">Thông tin báo cáo</div>
          <div class="line2">Hình thức báo cáo</div>
          <div class="line3">Đóng góp ý kiến</div>
          <div class="line2">Nội dung báo cáo</div>
          <div class="line3">Bảng quảng cáo bị hư hại do thời tiết</div>
          <div class="line2">Thời điểm báo cáo</div>
          <div class="line3">31/10/2023</div>
          <div class="line2">Họ tên người gửi</div>
          <div class="line3">Lê Trường Giang</div>
          <div class="line2">Điện thoại liên lạc</div>
          <div class="line3">0912345678</div>
        </div>
      </div>
      <div class="button-container">
        <button class="btn1a" onclick="goToChinhsua()">Chỉnh sửa</button>
        <button class="btn1b" onclick="goToChitiet()">Chi tiết</button>
        <button class="btn2">ĐÓNG</button>
      </div>
    </div>
  </content>
  <script>
    function initAutocomplete() {
      const map = new google.maps.Map(document.getElementById("map"), {
        center: { lat: {{locations.[0].toadoX}}, lng: {{locations.[0].toadoY}} },
        zoom: 19,
        mapTypeId: "roadmap",
      });
    }
    const addUser = async () => {
  const newUser = new Billboard({
    billboardID: 'b01',
    loaiID: 'l01',
    kichthuoc: '2.5m x 10m',
    hinhthuc: 'Cổ động chính trị',
    hinhanh: 'https://cdnphoto.dantri.com.vn/vdDPWOVB1hcODVeyES8rD1GTLio=/zoom/1200_630/2019/04/23/truong-dh-khoa-hoc-tu-nhien-tphcm-1555986970839.jpg',
    ngayhethan: new Date('2024-11-21'),
    locationID: 'p4q5-1'
  });

  try {
    const savedUser = await newUser.save();
    console.log(`User ${savedUser.userID} has been added.`);
  } catch (error) {
    console.error(`Error occurred while adding user: ${error}`);
  }
};

addUser();
    window.initAutocomplete = initAutocomplete;
  </script>
</body>

{{!-- let currentQCIcon = "images/QC.png";
  const QC = new google.maps.Marker({
    position: new google.maps.LatLng(10.7623944, 106.6872566),
    icon: {
      url: currentQCIcon,
      scaledSize: new google.maps.Size(30, 30) // width and height in pixels
    },
    map: map,
    
  });
  google.maps.event.addListener(QC, 'click', function() {
    // Code to execute when the QC marker is clicked
    var sidebar = document.getElementById("sidebar");
    var map = document.getElementById("map");
    var section2a = document.getElementById("section2a");
    var btn1a = document.querySelector('.btn1a');
    var btn1b = document.querySelector('.btn1b');
   
    if (currentQCIcon === "images/QC.png") {
      var newIcon = {
        url: "images/X.png", // Replace with your new icon URL
        scaledSize: new google.maps.Size(30, 30) // width and height in pixels
      };
      QC.setIcon(newIcon);
      currentQCIcon = "images/X.png";
      section2a.style.display = "block";
      map.style.width = "70%";
      sidebar.style.display = "block";
      btn1a.style.display = "block";
      if (currentBCIcon === "images/X.png") {
        var newIcon = {
          url: "images/BC.png", // Replace with your original icon URL
          scaledSize: new google.maps.Size(30, 30) // width and height in pixels
        };
        BC.setIcon(newIcon);
        currentBCIcon = "images/BC.png";
        var section2b = document.getElementById("section2b");
        section2b.style.display = "none";
        btn1b.style.display = "none";
      }
    } else if (currentQCIcon === "images/X.png") {
      var newIcon = {
        url: "images/QC.png", // Replace with your original icon URL
        scaledSize: new google.maps.Size(30, 30) // width and height in pixels
      };
      QC.setIcon(newIcon);
      currentQCIcon = "images/QC.png";
      map.style.width = "100%";
      sidebar.style.display = "none";
      section2a.style.display = "none";
      btn1a.style.display = "none";
    }
    console.log(map.style.width)
  });
   
  let currentBCIcon = "images/BC.png";
  const BC = new google.maps.Marker({
    position: new google.maps.LatLng(10.7619567, 106.6863498),
    icon: {
      url: currentBCIcon,
      scaledSize: new google.maps.Size(30, 30) // width and height in pixels
    },
    map: map,
  });
  google.maps.event.addListener(BC, 'click', function() {
    // Code to execute when the BC marker is clicked
    var sidebar = document.getElementById("sidebar");
    var map = document.getElementById("map");
    var section2b = document.getElementById("section2b");
    var btn1a = document.querySelector('.btn1a');
    var btn1b = document.querySelector('.btn1b');

    if (currentBCIcon === "images/BC.png") {
      var newIcon = {
        url: "images/X.png", // Replace with your new icon URL
        scaledSize: new google.maps.Size(30, 30) // width and height in pixels
      };
      BC.setIcon(newIcon);
      currentBCIcon = "images/X.png";
      section2b.style.display = "block";
      map.style.width = "70%";
      sidebar.style.display = "block";
      btn1b.style.display = "block";
      if (currentQCIcon === "images/X.png") {
        var newIcon = {
          url: "images/QC.png", // Replace with your original icon URL
          scaledSize: new google.maps.Size(30, 30) // width and height in pixels
        };
        QC.setIcon(newIcon);
        currentQCIcon = "images/QC.png";
        var section2a = document.getElementById("section2a");
        section2a.style.display = "none";
        btn1a.style.display = "none";
      }
    } else if (currentBCIcon === "images/X.png") {
      var newIcon = {
        url: "images/BC.png", // Replace with your original icon URL
        scaledSize: new google.maps.Size(30, 30) // width and height in pixels
      };
      BC.setIcon(newIcon);
      currentBCIcon = "images/BC.png";
      map.style.width = "100%";
      sidebar.style.display = "none";
      section2b.style.display = "none";
      btn1b.style.display = "none";
    }
    console.log(map.style.width)
  }); --}}